service: serverless-example

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.build.json'

provider:
  name: aws
  runtime: nodejs14.x

functions:
  getNotes:
    handler: handlers/notes.getNotes
    events:
      - http:
          path: notes
          method: GET
  addNote:
    handler: handlers/notes.addNote
    events:
      - http:
          path: notes
          method: POST
          cors: true  
          request:
            schemas:
              application/json: ${file(schema/create_note.json)}
            passThrough: NEVER
  getNote:
    handler: handlers/notes.getNoteById
    events:
      - http:
          path: notes/{noteId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                noteId: true
  updateNote:
    handler: handlers/notes.updateNoteById
    events:
      - http:
          path: notes/{noteId}
          method: patch
          cors: true
          request:
            parameters:
              paths:
                noteId: true
            schemas:
              application/json: ${file(schema/update_note.json)}
            passThrough: NEVER
  deleteNote:
    handler: handlers/notes.deleteNoteById
    events:
      - http:
          path: notes/{noteId}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                noteId: true

resources:
  Resources:
    notesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notes
        SSESpecification:
          SSEEnabled: true
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: noteId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: noteId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: title
            AttributeType: S
          - AttributeName: content
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1     
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        SSESpecification:
          SSEEnabled: true
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: emailId
            AttributeType: S
          - AttributeName: password
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1